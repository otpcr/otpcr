#!/usr/bin/env python3
# This file is placed in the Public Domain.
# pylint: disable=C0413,W0212,W0401,W0614,W0622,W0718


"tinder"


import os
import profile
import shutil
import sys
import termios
import time
import _thread


sys.path.insert(0, os.getcwd())


from otpcr.config  import Config
from otpcr.client  import Client
from otpcr.command import Commands, Event, parse
from otpcr.main    import modnames, wrap
from otpcr.modules import face
from otpcr.object  import Default, Object
from otpcr.persist import Workdir, laps, skel
from otpcr.runtime import STARTTIME, errors, later, launch


cfg = Config()
cfg.debug  = True
cfg.name = "tinder"
cfg.silent = False
cfg.skip = ["debug",]


if os.path.exists("mods"):
    from mods import face as MODS
else:
    MODS = None


face.rss.DEBUG = True


LAP = 1
NRS = 1
NRCOMMAND = 1
PERCALL = 1
STARTTIME = time.time()

events = []
paylock = _thread.allocate_lock()


param = Object()
param.cmd = [""]
param.dpl = ["hnrss title,url"]
param.fnd = ["log", "todo", "rss", "config"]
param.imp = ["tests/feeds.opml"]
param.log = ["bla"]
param.mod = [""]
param.mre = [""]
param.nme = ["hnrss hackernews"]
param.pwd = ["bla mekker"]
param.rem = ["hnrss"]
param.req = [""]
param.res = [""]
param.rss = ["http://hnrss.org/newest",]
param.tdo = ["mekker"]
param.ver = [""]


class CLI(Client):

    "command line interface."

    def raw(self, txt):
        if "-v" in sys.argv[1:]:
            print(txt)


def banner():
    "show banner."
    tme = time.ctime(time.time()).replace("  ", " ")
    print(f"{cfg.name.upper()} since {tme}")


def consume(evts):
    "wait for all events to finish."
    for evt in evts:
        evt.wait()


def payload(clt):
    "do payload."
    with paylock:
        nmr = 0
        for cmdd in Commands.cmds:
            for ex in getattr(param, cmdd, [""]):
                evt = Event()
                evt.orig = repr(clt)
                evt.txt = cmdd + " " + ex
                evt.type = "command"
                clt.put(evt)
                events.append(evt)
                nmr += 1
        return nmr


def mainer():
    "main"
    NRCOMMAND = len(Commands.cmds) or 1
    banner()
    cfg.mod = ",".join(modnames(face, MODS))
    if os.path.exists(Workdir.wdr):
        shutil.rmtree(Workdir.wdr)
    skel()
    clt = CLI()
    clt.start()
    nrs = cfg.index or 1
    thrs = []
    for _nr in range(nrs):
        thrs.append(launch(payload, clt))
    #consume(events)
    clt.wait()
    for thr in thrs:
        thr.join()
    endtime = time.time()
    lap = laps(endtime-STARTTIME)
    percall = (endtime-STARTTIME)/(nrs*NRCOMMAND)
    print(f"{lap} {nrs} {NRCOMMAND} {percall}")


if __name__ == "__main__":
    Workdir.wdr = ".test"
    for arg in sys.argv[1:]:
        try:
            cfg.index = int(arg[1:])
            break
        except (IndexError, ValueError):
            pass
    mainer()
    errors(print)
